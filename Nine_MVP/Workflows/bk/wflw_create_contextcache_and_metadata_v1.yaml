# This is a the workflow to set video metadata and create context cache for each video
 
main:
  params: [input]
  steps:

    - init:
        assign:
            # - metadata_detail: ${input.metadata_detail}  
            # - source_folder: ${input.source_folder} 
            # - source_bucket: ${input.source_bucket}  
            # - destination_bucket: ${input.destination_bucket}  
            # - project : ${input.project}
            # - location :  ${input.location}
            # - model: ${input.model}
 
            - source_folder: "vlt_video_extract/OTHERS"
            - source_bucket: "raw_nine_files"
            - destination_bucket: "raw_nine_files"
            - project : ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
            - location :  ${sys.get_env("GOOGLE_CLOUD_LOCATION")}
            - cach_expiry_time: ${ time.format( sys.now()+  172800)}
            - metadata_detail:
                  meta_data_folder: "vlt_video_metadata_fldr"
                  meta_data_file: "vlt_video_metadata.json"
 
            - MODEL : ${"projects/"+project+"/locations/"+location+"/publishers/google/models/gemini-1.5-pro-002"}
            - CACHED_CONTENT_ENDPOINT: ${"https://"+ location +"-aiplatform.googleapis.com/v1beta1/projects/"+ project+"/locations/"+location+"/cachedContents"}
            - CASHED_MEDIA_LIST : []
 

    - get_media_files:
        call: googleapis.storage.v1.objects.list
        args:
            bucket: ${source_bucket}
            prefix: ${source_folder}
        result: list_result
 
    

    # - st:
    #     assign:
    #         - x: "gs://raw_nine_files/vlt_video_extract/OTHERS/splitProcessOutput_vlt_video_extract_MAAT_Full_MAAT2023_10_A_HBB_360p_split2.mp4"

    # - create_batch_request_job1:        
    #                 call: http.post
    #                 args:
    #                     url: ${CACHED_CONTENT_ENDPOINT}
    #                     auth:
    #                         type: OAuth2
    #                     body:

    #                         "model":  ${MODEL}
    #                         "contents": [{
    #                             "role": "user",
    #                             "parts": [{
    #                                 "fileData": {
    #                                 "mimeType": "video/mp4",
    #                                 "fileUri":  "${x}"  
    #                                 }
    #                             }]
    #                         },
    #                         {
    #                             "role": "model",
    #                             "parts": [{
    #                                 "text": "Use this video to answer users questions."
    #                             }]
    #                         }]  
    #                         # "ttl": {
    #                         #         "seconds":"3600",
    #                         #         "nanos":"0"
    #                         #         }
    #                         expireTime: "${cach_expiry_time}"
                                          
                                                        
    #                 result: llm_response 


    # - ret:
    #     return: ${llm_response}    

        
    - loop_over_medias:
        for:
          value: item
          in: ${list_result.items}
          steps:
                - init_params:
                    assign:
                        - mime_type: ${item.contentType}
                        - gcs_uri: ${"gs://"+source_bucket+"/"+item.name} 
            
                - create_media_context_cache:  
                                call: http.post
                                args:
                                    url: ${CACHED_CONTENT_ENDPOINT}
                                    auth:
                                        type: OAuth2
                                    body:

                                        "model":  ${MODEL}
                                        "contents": [{
                                            "role": "user",
                                            "parts": [{
                                                "fileData": {
                                                "mimeType": "${mime_type}",
                                                "fileUri":  "${gcs_uri}"
                                                }

                                            }]
                                        },
                                        {
                                            "role": "model",
                                            "parts": [{
                                                "text": "Use this video to answer users questions."
                                            }]
                                        }]  
                                        # "ttl": {
                                        #         "seconds":"3600",
                                        #         "nanos":"0"
                                        #         } 
                                        expireTime: "${cach_expiry_time}"
                                result: llm_response  
                - record_context_cache_metadata:  
                    assign:
                        - cache_detail:    
                                    gcs_uri: ${gcs_uri}
                                    createTime: "${llm_response.body.createTime}"
                                    expireTime: "${llm_response.body.expireTime}"
                                    model: "${llm_response.body.model}"
                                    name: "${llm_response.body.name}"
                                    updateTime: "${llm_response.body.updateTime}"
                                    usageMetadata: "${llm_response.body.usageMetadata}"

                        - CASHED_MEDIA_LIST: ${list.concat(CASHED_MEDIA_LIST,cache_detail)} 

    - write_metadata_to_gcs:
        call: http.post
        args:
            url: ${"https://storage.googleapis.com/upload/storage/v1/b/" + destination_bucket + "/o"}
            auth:
                type: OAuth2
            query:
                name: ${metadata_detail.meta_data_folder +"/"+metadata_detail.meta_data_file} 
            body:
                  {items: "${CASHED_MEDIA_LIST}", cache_expiry_time: "${cach_expiry_time}"}

    - returnOutput:
            return: {items: "${CASHED_MEDIA_LIST}", cache_expiry_time: "${cach_expiry_time}"}


 
